-- 관리자 계정에서 sys 계정 연결 후 권한 부여

-- 신규 계정 생성
CREATE USER C##CREATE_JSP IDENTIFIED BY 002; 

-- 권한 부여
-- C##DEVELOP_JSP 계정에 DB 접속 및 객체 생성 권한 부여
GRANT CONNECT, RESOURCE TO C##CREATE_JSP;

-- 부여된 권한 확인 ROLE
SELECT * FROM DBA_ROLE_PRIVS WHERE GRANTEE = 'C##CREATE_JSP';

-- 일반적으로 금지된 로컬 사용자 생성을 허용
ALTER session SET "_ORACLE_SCRIPT"=true;

-- 일반 로컬 사용자 생성
CREATE USER create_jsp IDENTIFIED BY 002;

-- 접속 권한, Object(TABLE, SEQUENCE, TRIGGER 등) 생성 권한
GRANT CONNECT, RESOURCE TO CREATE_JSP;

-- ORA-01950(테이블 스페이스 권한 부족)
ALTER USER create_jsp QUOTA UNLIMITED ON USERS;



---------------------------------------- 테이블 생성 - 공통 --------------------------------------------------
CREATE TABLE member_table (
    num NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,                              -- 회원 번호 (PK)
    id          VARCHAR2(50) UNIQUE NOT NULL,                    -- 아이디
    pw          VARCHAR2(100) NOT NULL,                          -- 비밀번호
    name        VARCHAR2(50) NOT NULL,                           -- 이름
    addr        VARCHAR2(200),                                   -- 주소
    email       VARCHAR2(100),                                   -- 이메일
    phone       VARCHAR2(20),                                    -- 전화번호
    role	    VARCHAR2(10),							 		 -- 역할
    lang		VARCHAR2(50)
);

-- 멘토 프로필 
CREATE TABLE mentor_profile (
    num NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,                                  -- 고유 프로필 ID
    mentor_id    VARCHAR2(50) NOT NULL REFERENCES member_table(id),         -- 멘토의 아이디 (member 테이블 id 참조)
    name	     VARCHAR2(50),
    lang         VARCHAR2(50),                                        -- 주력 분야 (프로그래밍 언어)
    email        VARCHAR2(100),                                       -- 이메일
    introduction CLOB,                                                -- 소개글
    created_at   DATE DEFAULT SYSDATE                                 -- 등록일 (자동 입력)
);

-- 게시글 저장 테이블   +변경됨!
CREATE TABLE board_table (
    num NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,                                -- 게시글 ID
    mentor_id      VARCHAR2(50) NOT NULL REFERENCES member_table(id),       					   -- 멘토 아이디
    mentee_id	   VARCHAR2(50) NOT NULL REFERENCES member_table(id),							   -- 멘티 아이디(작성자)
    title          VARCHAR2(100) NOT NULL,                             -- 게시글 제목
    content        CLOB,                                               -- 게시글 내용 (수업 소개)
    category       VARCHAR2(50),                                       -- 분야 (예: Java, Python)
    created_at     DATE DEFAULT SYSDATE,                                -- 작성일
    is_completed   CHAR(1) DEFAULT 'N'
);


-- +추가! -------------------------------------------------------------

-- 멘토 답변 저장용 테이블
CREATE TABLE answer_table (
    num 		   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,   -- 답변 게시글 번호
    mentor_id      VARCHAR2(50) NOT NULL REFERENCES member_table(id),  -- 멘토 아이디 (게시글 테이블의 멘토 아이디와 같을 때만 답변 작성)
    content        CLOB,                                               -- 답변 작성
    board_num      NUMBER NOT NULL REFERENCES board_table(num),        -- 답변을 남기는 게시글의 번호 가져와서 저장
    created_at     DATE DEFAULT SYSDATE                                -- 작성일
);

-- 별점 저장 및 멘토별 평점 계산을 위한 테이블
CREATE TABLE rating (
	board_num	NUMBER UNIQUE NOT NULL REFERENCES board_table(num),  -- 별점은 게시물 하나당 한 번만 작성하도록 하기 위한 컬럼
	mentor_id   VARCHAR2(50) NOT NULL REFERENCES member_table(id),	 -- 멘토별로 별점 저장해서 평점 계산
	score 		NUMBER												 -- 별점 1~5 중 하나 숫자로 저장
);

---------------------------------------------------------------------

-- +추가(250801)------------------------------------------------------

-- 관리자 공지 사항 게시글 저장 테이블
CREATE TABLE master (
	num 	 	   NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,   -- 게시글 번호
	title	 	   VARCHAR2(100) NOT NULL,
	content        CLOB,
	created_at     DATE DEFAULT SYSDATE
);

---------------------------------------------------------------------
-- 조회

DELETE FROM member_table WHERE id = 'rlawlswn';

-- 커밋
COMMIT

-- 필요 시 테이블 제거
DROP TABLE master;


INSERT INTO member_table (
    id, pw, name, addr, email, phone, role
) VALUES (
    'admin', 'admin', '관리자',
    '부산광역시', 'master@gmail.com', '01012345678', 'MASTER'
);

INSERT INTO member_table (
    id, pw, name, addr, email, phone, role
) VALUES (
    'id004', '1111', '멘티2',
    '부산광역시', '2345@gmail.com', '01011111113', '멘티'
);


INSERT INTO mentor_profile (
    mentor_id, name, lang, email, introduction
) VALUES (
    'user005', '권우진', 'JAVA', 'user005@example.com', '안녕하세요, Java 기초부터 객체지향 설계, 디자인 패턴까지 체계적으로 지도합니다. 
프로그래밍을 처음 시작하는 분부터 심화 학습이 필요한 분까지 모두 환영합니다.'
);

UPDATE mentor_profile SET email = 'user009@example.com' WHERE mentor_id = 'user009';

INSERT INTO mentor_profile (
    mentor_id, name, lang, email, introduction
) VALUES (
    'id003', '김멘토', 'C', '456@gmail.com', '잘 부탁드립니다!'
);

SELECT * FROM member_table ORDER BY num DESC;

INSERT INTO board_table (
	mentor_id, mentee_id, title, content, category
) VALUES (
	'user032', 'user097', '딕셔너리 키가 없다고 나와요', 'data = {"name": "Tom"}
print(data["age"])

KeyError가 납니다.', 'PYTHON'
);


SELECT * FROM board_table;

DELETE FROM mentor_profile WHERE mentor_id = 'rlawlswn';

-- member_table에 sample dummy data 추가
INSERT INTO member_table (id, pw, name, addr, email, phone, role, lang)
SELECT
    'id000' || LEVEL, 
    '1111', 
    CASE WHEN MOD(LEVEL, 2) = 1 THEN '멘토'||LEVEL ELSE '멘티'||LEVEL END,
    CASE WHEN MOD(LEVEL, 2) = 1 THEN '부산' ELSE '서울' END,
    LEVEL || 'sample@gmail.com', 
    '01011111' || LEVEL, 
    CASE WHEN MOD(LEVEL, 2) = 1 THEN '멘토' ELSE '멘티' END,
    CASE WHEN MOD(LEVEL, 2) = 1 THEN 'JAVA' ELSE NULL END
FROM DUAL
CONNECT BY LEVEL <= 100;


-- board_table에 sample dummy data 추가
INSERT INTO board_table(mentor_id, mentee_id, title, content, category)
SELECT
	'id001', 'id0002', '테스트용 제목'||LEVEL, '테스트 중!', 'JAVA'
FROM DUAL
CONNECT BY LEVEL <= 100;

-- master 테이블에 sample dummy data 추가
INSERT INTO master(title, content)
SELECT
	'공지글' || LEVEL, '테스트용 공지 사항' || LEVEL
FROM DUAL
CONNECT BY LEVEL <= 100;


SELECT rownum AS rnum, B.* FROM 
(SELECT * FROM board_table) AS B WHERE B.mentor_id = 'id001' ORDER BY B.num DESC;

SELECT rownum , B.* FROM board_table AS B WHERE mentor_id = 'id001' ORDER BY num DESC;

SELECT ROWNUM AS rn, t.* FROM 
(SELECT * FROM board_table WHERE mentor_id = 'id001' ORDER BY num ASC)
t ORDER BY rn DESC;

SELECT ROWNUM AS rn, ms.* FROM 
(SELECT * FROM master ORDER BY num ASC)
ms ORDER BY rn DESC;


SELECT a.table_name, a.constraint_name, a.column_name, c.owner, 
       c.r_owner, c_pk.table_name r_table_name, c_pk.constraint_name r_constraint_name
FROM all_cons_columns a
JOIN all_constraints c ON a.owner = c.owner
  AND a.constraint_name = c.constraint_name
JOIN all_constraints c_pk ON c.r_constraint_name = c_pk.constraint_name
WHERE c.constraint_type = 'R'
AND c.constraint_name = 'SYS_C0088777';


SELECT * FROM board_table;




SELECT ROWNUM AS rn, t.* FROM 
(SELECT * FROM board_table ON A.mentor_id = B.id AND mentor_id = ? ORDER BY A.rn DESC ORDER BY num ASC) t 
 



INSERT INTO master (title, content)
VALUES 
-- 1
('📢 서비스 점검 안내 (8/10 새벽 2시~5시)', 
 '안녕하세요, 회원님.\n\n보다 안정적인 서비스 제공을 위해 아래와 같이 시스템 점검이 진행됩니다.\n\n- 점검 일시: 2025년 8월 10일(토) 02:00 ~ 05:00\n- 점검 내용: 서버 정기 점검 및 보안 업데이트\n\n점검 시간 동안 일부 서비스 이용이 제한될 수 있으니 양해 부탁드립니다.\n\n감사합니다.');
 
INSERT INTO master (title, content)
VALUES 
-- 3
('🚨 보안 관련 비밀번호 변경 권고 안내', 
 '최근 보안 강화 작업으로 인해 비밀번호 변경을 권장드립니다.\n\n- 변경 방법: [마이페이지 > 비밀번호 변경]\n- 주기적인 비밀번호 변경은 개인정보 보호에 큰 도움이 됩니다.\n\n회원님의 안전한 이용을 위해 꼭 확인해주세요.');

INSERT INTO master (title, content)
VALUES 
-- 5
('📢 휴면 계정 전환 안내', 
 '1년 이상 로그인 기록이 없는 계정은 관련 법령에 따라 휴면 처리됩니다.\n\n- 대상: 2024년 8월 31일 이전 마지막 로그인 사용자\n- 전환 예정일: 2025년 9월 10일\n- 휴면 해제 방법: 로그인 후 본인 인증\n\n계정 보호를 위해 사전 로그인 부탁드립니다.');

INSERT INTO master (title, content)
VALUES 
-- 1
('🔧 시스템 점검 안내 (8/12 새벽 1시~3시)', 
 '안녕하세요, 멘토링 운영팀입니다.\n\n더 안정적인 서비스를 제공하기 위해 아래와 같이 시스템 점검이 예정되어 있습니다.\n\n- 점검 일시: 2025년 8월 12일(화) 01:00 ~ 03:00\n- 영향 범위: 사이트 접속 일시 중단\n\n이용에 불편을 드려 죄송하며, 빠르게 마무리하도록 하겠습니다.'),

-- 2
INSERT INTO master (title, content)
VALUES
('👩‍🏫 신규 멘토 등록 안내', 
 '전문 분야 멘토가 새롭게 등록되었습니다.\n\n- 분야: JSP, Spring\n\n- 멘토 프로필을 확인해보시고 1:1 멘토링을 신청해보세요!');

-- 3
('📚 8월 스터디 개설 안내', 
 '8월에도 다양한 온라인 스터디가 열립니다!\n\n- 모집 기간: ~ 8월 14일(수)\n- 운영 방식: 비대면(Zoom), 주 1회\n\n[스터디] 메뉴에서 관심 있는 주제를 신청해보세요.'),


INSERT INTO master (title, content)
VALUES
('📢 멘토링 이용 가이드 신규 등록', 
 '처음 멘토링 서비스를 이용하시는 분들을 위해 이용 가이드를 정리했습니다.\n\n- 위치: [공지사항 > 멘토링 가이드]\n- 내용: 멘토 신청 방법, 피드백 방식, 일정 조율 등\n\n처음이라도 걱정 마세요!');

-- 7
INSERT INTO master (title, content)
VALUES
('멘토 평가제도 시행 안내', 
 '2025년 8월부터 멘토링 종료 후 평가 시스템이 도입됩니다.\n\n- 평가 항목: 설명력, 친절도, 유익함 등\n- 평가는 익명으로 반영되며, 멘토 공개 프로필에 일부 반영됩니다.\n\n좋은 멘토링 문화를 함께 만들어가요!');






commit

8